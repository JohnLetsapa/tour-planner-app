"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isColor;

var _cssColorNames = _interopRequireDefault(require("./cssColorNames"));

var _isHSLA = _interopRequireDefault(require("./utils/isHSLA"));

var _isRGBA = _interopRequireDefault(require("./utils/isRGBA"));

/**
 * Detects whether the specified values is a CSS/HTML valid color. It currently supports:
 *  - color keywords
 *  - RGB (#-hexadecimal, rgb(…), rgba(…))
 *  - HSL (hsl(…) and hsla(…))
 *
 * TODO (currently not suported):
 *  - lch(…) - https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch()
 *  - lab(…) - https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lab()
 *  - color(…) - https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color()
 *
 * See: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value
 */
function isColor(value) {
  if (typeof value !== 'string') {
    return false;
  }

  return value === 'transparent' || value === 'currentcolor' || _cssColorNames.default.has(value) || // keyword values
  /^#[0-9a-f]{3}$/i.test(value) || // RGB hexadecimal shorthand
  /^#[0-9a-f]{4}$/i.test(value) || // RGB hexadecimal shorthand (with alpha)
  /^#[0-9a-f]{6}$/i.test(value) || // RGB hexadecimal full
  /^#[0-9a-f]{8}$/i.test(value) || // RGB hexadecimal full (with alpha)
  (0, _isRGBA.default)(value) || // RGB[A] functional
  (0, _isHSLA.default)(value) // HSL[A] functional
  ;
}