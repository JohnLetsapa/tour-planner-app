"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isRGBA;
exports.RGBA_PATTERN_TEST = exports.RGBA_PATTERN_MATCH = void 0;

var _regexp = require("./regexp");

var RGBA_PATTERN_MATCH = ['^rgba?\\(', (0, _regexp._or)([_regexp._number, _regexp._percentage], 'R'), // red
_regexp._spaceOrComma, (0, _regexp._or)([_regexp._number, _regexp._percentage], 'G'), // green
_regexp._spaceOrComma, (0, _regexp._or)([_regexp._number, _regexp._percentage], 'B'), // blue
(0, _regexp._optionalGroup)([(0, _regexp._or)(['\\s?/\\s?', ',\\s?']), // " / " or comma
(0, _regexp._or)([_regexp._number, _regexp._percentage], 'A') // alpha
]), '\\)$'].join('');
exports.RGBA_PATTERN_MATCH = RGBA_PATTERN_MATCH;
var RGBA_PATTERN_TEST = ['^rgba?\\(', (0, _regexp._or)([// Modern format:
(0, _regexp._group)([(0, _regexp._or)([(0, _regexp._group)([_regexp._percentage, // R (0% - 100%)
_regexp._space, _regexp._percentage, // G (0% - 100%)
_regexp._space, _regexp._percentage // B (0% - 100%)
]), (0, _regexp._group)([_regexp._number, // R (0 - 255)
_regexp._space, _regexp._number, // G (0 - 255)
_regexp._space, _regexp._number // B (0 - 255)
])]), (0, _regexp._optionalGroup)(['\\s?/\\s?', // " / "
(0, _regexp._or)([_regexp._number, _regexp._percentage]) // alpha
])]), // Legacy format:
(0, _regexp._group)([(0, _regexp._or)([(0, _regexp._group)([_regexp._percentage, // R (0% - 100%)
_regexp._comma, _regexp._percentage, // G (0% - 100%)
_regexp._comma, _regexp._percentage // B (0% - 100%)
]), (0, _regexp._group)([_regexp._number, // R (0 - 255)
_regexp._comma, _regexp._number, // G (0 - 255)
_regexp._comma, _regexp._number // B (0 - 255)
])]), (0, _regexp._optionalGroup)([_regexp._comma, (0, _regexp._or)([_regexp._number, _regexp._percentage]) // alpha
])])]), '\\)$'].join('');
/**
 * Syntax:
 *
 * ```
 * rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) |
 *  rgb( <number>{3} [ / <alpha-value> ]? )
 * <alpha-value> = <number> | <percentage>
 * ```
 *
 * For legacy reasons, rgb() also supports an alternate syntax that separates all of its arguments
 * with commas:
 *
 * ```
 * rgb() = rgb( <percentage>#{3} , <alpha-value>? ) |
 *  rgb( <number>#{3} , <alpha-value>? )
 * ```
 *
 * Also for legacy reasons, an rgba() function also exists, with an identical grammar and behavior to rgb().
 *
 * See: https://www.w3.org/TR/css-color-4/#numeric-srgb
 */

exports.RGBA_PATTERN_TEST = RGBA_PATTERN_TEST;

function isRGBA(value) {
  return new RegExp(RGBA_PATTERN_TEST, 'i').test(value);
}