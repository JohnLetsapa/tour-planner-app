"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function get() {
    return _create.default;
  }
});
Object.defineProperty(exports, "keyframes", {
  enumerable: true,
  get: function get() {
    return _keyframes.default;
  }
});
Object.defineProperty(exports, "getStyleTag", {
  enumerable: true,
  get: function get() {
    return _getStyleTag.default;
  }
});
exports.default = exports.__internal = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _js = require("@adeira/js");

var _create = _interopRequireDefault(require("./src/create"));

var _keyframes = _interopRequireDefault(require("./src/keyframes"));

var _getStyleTag = _interopRequireDefault(require("./src/getStyleTag"));

var _StyleCollector = _interopRequireDefault(require("./src/StyleCollector"));

/**
 * Users of SX should be able to import it as follows:
 *
 *    import sx from '@adeira/sx';
 *    sx(), sx.create(), sx.keyframes(), ...
 *
 * Alternatively:
 *
 *    import { create as sxCreate } from '@adeira/sx';
 *    sxCreate(), ...
 *
 * 
 */

/**
 * This function allows us to compose local and external styles like so:
 *
 * ```
 * import sx from '@adeira/sx';
 *
 * const styles = sx.create({ default: { fontSize: 16 } });
 * const externalStyles = sx.create({ spacing: { marginTop: 4 } });
 *
 * <div className={sx(styles.default, externalStyles.spacing)} />;
 * ```
 *
 * It does so by literally merging the 2 objects together and calling `sx.create` on the result.
 */
function composeStylesheets() {
  for (var _len = arguments.length, stylesheets = new Array(_len), _key = 0; _key < _len; _key++) {
    stylesheets[_key] = arguments[_key];
  }

  // Should we support deeply nested styles or leave it like this and overwrite them?
  // $FlowIssue[not-an-object]: https://github.com/facebook/flow/issues/1414
  var mergedStylesheet = Object.assign.apply(Object, [{}].concat((0, _toConsumableArray2.default)(stylesheets.filter(_js.isObject))));

  if (Object.keys(mergedStylesheet).length === 0) {
    // happens when composing "nothing" which is a valid input
    return undefined;
  }

  return (0, _create.default)({
    __internal_compose_stylesheets: mergedStylesheet
  })('__internal_compose_stylesheets');
}

composeStylesheets.create = _create.default;
composeStylesheets.keyframes = _keyframes.default;
composeStylesheets.getStyleTag = _getStyleTag.default;
var __internal = {
  StyleCollector: _StyleCollector.default
};
exports.__internal = __internal;
var _default = composeStylesheets;
exports.default = _default;