"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _js = require("@adeira/js");

var _hashStyle = _interopRequireDefault(require("./hashStyle"));

var _transformValue = _interopRequireDefault(require("./transformValue"));

var _transformStyleName = _interopRequireDefault(require("./transformStyleName"));

/**
 * Represents the most basic style node:
 *
 * ```
 * color: 'red'
 * ```
 *
 *   ↓ ↓ ↓
 *
 * ```
 * {
 *   hash: 'c0',
 *   styleName: 'color',
 *   styleValue: 'red',
 * }
 * ```
 */
var StyleCollectorNode = /*#__PURE__*/function () {
  function StyleCollectorNode(styleName, styleValue) {
    var hashSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    (0, _classCallCheck2.default)(this, StyleCollectorNode);
    (0, _defineProperty2.default)(this, "hash", void 0);
    (0, _defineProperty2.default)(this, "styleName", void 0);
    (0, _defineProperty2.default)(this, "styleValue", void 0);
    this.styleName = (0, _transformStyleName.default)(styleName);
    this.styleValue = (0, _transformValue.default)(styleName, styleValue);
    this.hash = (0, _hashStyle.default)("".concat(this.styleName).concat(this.styleValue).concat(hashSeed));
  } // eslint-disable-next-line no-unused-vars


  (0, _createClass2.default)(StyleCollectorNode, [{
    key: "addNodes",
    value: function addNodes(nodes) {
      !false ? process.env.NODE_ENV !== "production" ? (0, _js.invariant)(false, 'StyleCollectorNode cannot have nested nodes,') : (0, _js.invariant)(false) : void 0;
    }
  }, {
    key: "getHash",
    value: function getHash() {
      return this.hash;
    }
  }, {
    key: "getStyleName",
    value: function getStyleName() {
      return this.styleName;
    }
  }, {
    key: "getStyleValue",
    value: function getStyleValue() {
      return this.styleValue;
    }
  }, {
    key: "printNodes",
    value: function printNodes(config) {
      var _config$pseudo;

      var className = ".".concat(this.hash).repeat((config === null || config === void 0 ? void 0 : config.bumpSpecificity) === true ? 2 : 1);
      var pseudo = (_config$pseudo = config === null || config === void 0 ? void 0 : config.pseudo) !== null && _config$pseudo !== void 0 ? _config$pseudo : '';
      var trailingSemicolon = config !== null && config !== void 0 && config.trailingSemicolon ? ';' : '';
      return ["".concat(className).concat(pseudo, "{").concat(this.styleName, ":").concat(this.styleValue).concat(trailingSemicolon, "}")];
    }
  }]);
  return StyleCollectorNode;
}();

exports.default = StyleCollectorNode;