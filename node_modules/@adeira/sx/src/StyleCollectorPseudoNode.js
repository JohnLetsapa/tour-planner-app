"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Represents basic style node with pseudo class:
 *
 * ```
 * ':hover': {
 *   color: 'red',
 *   textDecoration: 'underline',
 * },
 * ```
 *
 *   ↓ ↓ ↓
 *
 * ```
 * {
 *   pseudo: ':hover',
 *   nodes: [
 *     StyleCollectorNode,
 *     StyleCollectorNode,
 *   ],
 * }
 * ```
 */
var StyleCollectorPseudoNode = /*#__PURE__*/function () {
  function StyleCollectorPseudoNode(pseudo, nodes) {
    (0, _classCallCheck2.default)(this, StyleCollectorPseudoNode);
    (0, _defineProperty2.default)(this, "pseudo", void 0);
    (0, _defineProperty2.default)(this, "nodes", void 0);
    this.pseudo = pseudo;
    this.nodes = nodes;
  }

  (0, _createClass2.default)(StyleCollectorPseudoNode, [{
    key: "addNodes",
    value: function addNodes(nodes) {
      this.nodes = new Map([].concat((0, _toConsumableArray2.default)(this.nodes), (0, _toConsumableArray2.default)(nodes)));
    }
  }, {
    key: "getPseudo",
    value: function getPseudo() {
      return this.pseudo;
    }
  }, {
    key: "printNodes",
    value: function printNodes(config) {
      var _this = this;

      var output = [];
      this.nodes.forEach(function (node) {
        output = output.concat(node.printNodes(_objectSpread(_objectSpread({}, config), {}, {
          pseudo: _this.pseudo
        })));
      });
      return output;
    }
  }]);
  return StyleCollectorPseudoNode;
}();

exports.default = StyleCollectorPseudoNode;