"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = generatePseudoTypes;

var _signedSource = _interopRequireDefault(require("@adeira/signed-source"));

var _mdnData = _interopRequireDefault(require("mdn-data"));

var _prettify = _interopRequireDefault(require("./prettify"));

// Note: this is currently not very accurate since things like pseudos with arguments won't work
// See: https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child
function generatePseudoTypes(cb) {
  var flowPseudoPrint = '';
  var cssSelectors = _mdnData.default.css.selectors;

  for (var _i = 0, _Object$keys = Object.keys(cssSelectors); _i < _Object$keys.length; _i++) {
    var selectorName = _Object$keys[_i];
    var selector = cssSelectors[selectorName];

    if (/^::?[a-z-]+$/i.test(selectorName) && selector.groups.length === 2 && selector.groups.includes('Selectors') && (selector.groups.includes('Pseudo-classes') || selector.groups.includes('Pseudo-elements'))) {
      var mdnUrlComment = (selector === null || selector === void 0 ? void 0 : selector.mdn_url) != null ? "// ".concat(selector.mdn_url) : '';
      flowPseudoPrint += "+'".concat(selectorName, "'?:AllCSSPropertyTypes,").concat(mdnUrlComment, "\n");
    }
  }

  var template = _signedSource.default.signFile("\n/**\n * ".concat(_signedSource.default.getSigningToken(), "\n * @flow strict\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\n */\n\nimport type { AllCSSPropertyTypes } from './AllCSSPropertyTypes';\n\nexport type AllCSSPseudoTypes = {\n  ").concat(flowPseudoPrint, "\n};\n"));

  return (0, _prettify.default)(template, cb);
}